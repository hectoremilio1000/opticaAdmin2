
enum ORDENSTATUS {
  CREADA
  ENVIADAMAQUILA
  ENTREGADA
  CONPROBLEMAS
}

type INVENTARIOORDENITEMS @aws_iam @aws_api_key {
  id: ID!
  cantidad: Int
  costo: Float
  inventarioID: ID!
  ordenID: ID!
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!
  _version: Int!
  _deleted: Boolean
  _lastChangedAt: AWSTimestamp!
}

enum TIPOORDEN {
  COTIZACION
  ORDEN
}

type GERENTE @aws_iam @aws_api_key {
  id: ID!
  nombres: String!
  userName: String!
  email: String
  phoneNumber: String
  confirmed: Boolean
  blocked: Boolean
  createdBy: String!
  opticaID: ID!
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!
  _version: Int!
  _deleted: Boolean
  _lastChangedAt: AWSTimestamp!
}

type VENDEDORES @aws_iam @aws_api_key {
  id: ID!
  nombres: String
  apellidoPaterno: String
  apellidoMaterno: String
  whats: String
  email: String
  opticaID: ID!
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!
  _version: Int!
  _deleted: Boolean
  _lastChangedAt: AWSTimestamp!
}

enum ENUMCATEGORIA {
  DAMA
  CABALLERO
  BOY
}

type INVENTARIO @aws_iam @aws_api_key {
  id: ID!
  nombreProducto: String
  proveedor: String
  costo: Float!
  precioVenta: Float!
  color: String
  tipoEstructura: String
  urlImagen: String
  tipoMaterial: String
  categoria: ENUMCATEGORIA!
  INVENTARIOORDENITEMS(filter: ModelINVENTARIOORDENITEMSFilterInput, sortDirection: ModelSortDirection, limit: Int, nextToken: String): ModelINVENTARIOORDENITEMSConnection
  opticaID: ID!
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!
  _version: Int!
  _deleted: Boolean
  _lastChangedAt: AWSTimestamp!
}

type ORDEN @aws_iam @aws_api_key {
  id: ID!
  opticaID: ID!
  tipoOrden: TIPOORDEN
  clientesID: ID!
  usadoLentes: String
  fechaOrden: String
  horaOrden: String
  precioTotal: String
  referencia: String
  fechaEntrega: String
  seRealizoExamen: String
  graduacionDerechaVieja: String
  graduacionIzquierdaVieja: String
  graduacionDerechaNueva: String
  graduacionIzquierdaNueva: String
  fechaExamen: String
  INVENTARIOORDENITEMS(filter: ModelINVENTARIOORDENITEMSFilterInput, sortDirection: ModelSortDirection, limit: Int, nextToken: String): ModelINVENTARIOORDENITEMSConnection
  ordenStatus: ORDENSTATUS
  precioGraduacion: String
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!
  _version: Int!
  _deleted: Boolean
  _lastChangedAt: AWSTimestamp!
}

type CLIENTES @aws_iam @aws_api_key {
  id: ID!
  nombres: String
  apellidoPaterno: String
  apellidoMaterno: String
  fechaNacimiento: String
  edad: String
  whats: String
  sexo: String
  email: String
  opticaID: ID!
  ORDENS(filter: ModelORDENFilterInput, sortDirection: ModelSortDirection, limit: Int, nextToken: String): ModelORDENConnection
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!
  _version: Int!
  _deleted: Boolean
  _lastChangedAt: AWSTimestamp!
}

type OPTICA @aws_iam @aws_api_key {
  id: ID!
  nombre: String!
  createdBy: String!
  VENDEDORES(filter: ModelVENDEDORESFilterInput, sortDirection: ModelSortDirection, limit: Int, nextToken: String): ModelVENDEDORESConnection
  GERENTES(filter: ModelGERENTEFilterInput, sortDirection: ModelSortDirection, limit: Int, nextToken: String): ModelGERENTEConnection
  ORDENS(filter: ModelORDENFilterInput, sortDirection: ModelSortDirection, limit: Int, nextToken: String): ModelORDENConnection
  CLIENTES(filter: ModelCLIENTESFilterInput, sortDirection: ModelSortDirection, limit: Int, nextToken: String): ModelCLIENTESConnection
  INVENTARIOS(filter: ModelINVENTARIOFilterInput, sortDirection: ModelSortDirection, limit: Int, nextToken: String): ModelINVENTARIOConnection
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!
  _version: Int!
  _deleted: Boolean
  _lastChangedAt: AWSTimestamp!
}

input ModelStringInput {
  ne: String
  eq: String
  le: String
  lt: String
  ge: String
  gt: String
  contains: String
  notContains: String
  between: [String]
  beginsWith: String
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
  size: ModelSizeInput
}

input ModelIntInput {
  ne: Int
  eq: Int
  le: Int
  lt: Int
  ge: Int
  gt: Int
  between: [Int]
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
}

input ModelFloatInput {
  ne: Float
  eq: Float
  le: Float
  lt: Float
  ge: Float
  gt: Float
  between: [Float]
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
}

input ModelBooleanInput {
  ne: Boolean
  eq: Boolean
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
}

input ModelIDInput {
  ne: ID
  eq: ID
  le: ID
  lt: ID
  ge: ID
  gt: ID
  contains: ID
  notContains: ID
  between: [ID]
  beginsWith: ID
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
  size: ModelSizeInput
}

input ModelSubscriptionStringInput {
  ne: String
  eq: String
  le: String
  lt: String
  ge: String
  gt: String
  contains: String
  notContains: String
  between: [String]
  beginsWith: String
  in: [String]
  notIn: [String]
}

input ModelSubscriptionIntInput {
  ne: Int
  eq: Int
  le: Int
  lt: Int
  ge: Int
  gt: Int
  between: [Int]
  in: [Int]
  notIn: [Int]
}

input ModelSubscriptionFloatInput {
  ne: Float
  eq: Float
  le: Float
  lt: Float
  ge: Float
  gt: Float
  between: [Float]
  in: [Float]
  notIn: [Float]
}

input ModelSubscriptionBooleanInput {
  ne: Boolean
  eq: Boolean
}

input ModelSubscriptionIDInput {
  ne: ID
  eq: ID
  le: ID
  lt: ID
  ge: ID
  gt: ID
  contains: ID
  notContains: ID
  between: [ID]
  beginsWith: ID
  in: [ID]
  notIn: [ID]
}

enum ModelAttributeTypes {
  binary
  binarySet
  bool
  list
  map
  number
  numberSet
  string
  stringSet
  _null
}

input ModelSizeInput {
  ne: Int
  eq: Int
  le: Int
  lt: Int
  ge: Int
  gt: Int
  between: [Int]
}

enum ModelSortDirection {
  ASC
  DESC
}

type ModelINVENTARIOORDENITEMSConnection @aws_api_key @aws_iam {
  items: [INVENTARIOORDENITEMS]!
  nextToken: String
  startedAt: AWSTimestamp
}

input ModelINVENTARIOORDENITEMSFilterInput {
  id: ModelIDInput
  cantidad: ModelIntInput
  costo: ModelFloatInput
  inventarioID: ModelIDInput
  ordenID: ModelIDInput
  and: [ModelINVENTARIOORDENITEMSFilterInput]
  or: [ModelINVENTARIOORDENITEMSFilterInput]
  not: ModelINVENTARIOORDENITEMSFilterInput
}

type Query {
  getINVENTARIOORDENITEMS(id: ID!): INVENTARIOORDENITEMS @aws_api_key @aws_iam
  listINVENTARIOORDENITEMS(filter: ModelINVENTARIOORDENITEMSFilterInput, limit: Int, nextToken: String): ModelINVENTARIOORDENITEMSConnection @aws_api_key @aws_iam
  syncINVENTARIOORDENITEMS(filter: ModelINVENTARIOORDENITEMSFilterInput, limit: Int, nextToken: String, lastSync: AWSTimestamp): ModelINVENTARIOORDENITEMSConnection @aws_api_key @aws_iam
  iNVENTARIOORDENITEMSByInventarioID(inventarioID: ID!, sortDirection: ModelSortDirection, filter: ModelINVENTARIOORDENITEMSFilterInput, limit: Int, nextToken: String): ModelINVENTARIOORDENITEMSConnection @aws_api_key @aws_iam
  iNVENTARIOORDENITEMSByOrdenID(ordenID: ID!, sortDirection: ModelSortDirection, filter: ModelINVENTARIOORDENITEMSFilterInput, limit: Int, nextToken: String): ModelINVENTARIOORDENITEMSConnection @aws_api_key @aws_iam
  getGERENTE(id: ID!): GERENTE @aws_api_key @aws_iam
  listGERENTES(filter: ModelGERENTEFilterInput, limit: Int, nextToken: String): ModelGERENTEConnection @aws_api_key @aws_iam
  syncGERENTES(filter: ModelGERENTEFilterInput, limit: Int, nextToken: String, lastSync: AWSTimestamp): ModelGERENTEConnection @aws_api_key @aws_iam
  gERENTESByOpticaID(opticaID: ID!, sortDirection: ModelSortDirection, filter: ModelGERENTEFilterInput, limit: Int, nextToken: String): ModelGERENTEConnection @aws_api_key @aws_iam
  getVENDEDORES(id: ID!): VENDEDORES @aws_api_key @aws_iam
  listVENDEDORES(filter: ModelVENDEDORESFilterInput, limit: Int, nextToken: String): ModelVENDEDORESConnection @aws_api_key @aws_iam
  syncVENDEDORES(filter: ModelVENDEDORESFilterInput, limit: Int, nextToken: String, lastSync: AWSTimestamp): ModelVENDEDORESConnection @aws_api_key @aws_iam
  vENDEDORESByOpticaID(opticaID: ID!, sortDirection: ModelSortDirection, filter: ModelVENDEDORESFilterInput, limit: Int, nextToken: String): ModelVENDEDORESConnection @aws_api_key @aws_iam
  getINVENTARIO(id: ID!): INVENTARIO @aws_api_key @aws_iam
  listINVENTARIOS(filter: ModelINVENTARIOFilterInput, limit: Int, nextToken: String): ModelINVENTARIOConnection @aws_api_key @aws_iam
  syncINVENTARIOS(filter: ModelINVENTARIOFilterInput, limit: Int, nextToken: String, lastSync: AWSTimestamp): ModelINVENTARIOConnection @aws_api_key @aws_iam
  iNVENTARIOSByOpticaID(opticaID: ID!, sortDirection: ModelSortDirection, filter: ModelINVENTARIOFilterInput, limit: Int, nextToken: String): ModelINVENTARIOConnection @aws_api_key @aws_iam
  getORDEN(id: ID!): ORDEN @aws_api_key @aws_iam
  listORDENS(filter: ModelORDENFilterInput, limit: Int, nextToken: String): ModelORDENConnection @aws_api_key @aws_iam
  syncORDENS(filter: ModelORDENFilterInput, limit: Int, nextToken: String, lastSync: AWSTimestamp): ModelORDENConnection @aws_api_key @aws_iam
  oRDENSByOpticaID(opticaID: ID!, sortDirection: ModelSortDirection, filter: ModelORDENFilterInput, limit: Int, nextToken: String): ModelORDENConnection @aws_api_key @aws_iam
  oRDENSByClientesID(clientesID: ID!, sortDirection: ModelSortDirection, filter: ModelORDENFilterInput, limit: Int, nextToken: String): ModelORDENConnection @aws_api_key @aws_iam
  getCLIENTES(id: ID!): CLIENTES @aws_api_key @aws_iam
  listCLIENTES(filter: ModelCLIENTESFilterInput, limit: Int, nextToken: String): ModelCLIENTESConnection @aws_api_key @aws_iam
  syncCLIENTES(filter: ModelCLIENTESFilterInput, limit: Int, nextToken: String, lastSync: AWSTimestamp): ModelCLIENTESConnection @aws_api_key @aws_iam
  cLIENTESByOpticaID(opticaID: ID!, sortDirection: ModelSortDirection, filter: ModelCLIENTESFilterInput, limit: Int, nextToken: String): ModelCLIENTESConnection @aws_api_key @aws_iam
  getOPTICA(id: ID!): OPTICA @aws_api_key @aws_iam
  listOPTICAS(filter: ModelOPTICAFilterInput, limit: Int, nextToken: String): ModelOPTICAConnection @aws_api_key @aws_iam
  syncOPTICAS(filter: ModelOPTICAFilterInput, limit: Int, nextToken: String, lastSync: AWSTimestamp): ModelOPTICAConnection @aws_api_key @aws_iam
}

input ModelINVENTARIOORDENITEMSConditionInput {
  cantidad: ModelIntInput
  costo: ModelFloatInput
  inventarioID: ModelIDInput
  ordenID: ModelIDInput
  and: [ModelINVENTARIOORDENITEMSConditionInput]
  or: [ModelINVENTARIOORDENITEMSConditionInput]
  not: ModelINVENTARIOORDENITEMSConditionInput
}

input CreateINVENTARIOORDENITEMSInput {
  id: ID
  cantidad: Int
  costo: Float
  inventarioID: ID!
  ordenID: ID!
  _version: Int
}

input UpdateINVENTARIOORDENITEMSInput {
  id: ID!
  cantidad: Int
  costo: Float
  inventarioID: ID
  ordenID: ID
  _version: Int
}

input DeleteINVENTARIOORDENITEMSInput {
  id: ID!
  _version: Int
}

type Mutation {
  createINVENTARIOORDENITEMS(input: CreateINVENTARIOORDENITEMSInput!, condition: ModelINVENTARIOORDENITEMSConditionInput): INVENTARIOORDENITEMS @aws_api_key @aws_iam
  updateINVENTARIOORDENITEMS(input: UpdateINVENTARIOORDENITEMSInput!, condition: ModelINVENTARIOORDENITEMSConditionInput): INVENTARIOORDENITEMS @aws_api_key @aws_iam
  deleteINVENTARIOORDENITEMS(input: DeleteINVENTARIOORDENITEMSInput!, condition: ModelINVENTARIOORDENITEMSConditionInput): INVENTARIOORDENITEMS @aws_api_key @aws_iam
  createGERENTE(input: CreateGERENTEInput!, condition: ModelGERENTEConditionInput): GERENTE @aws_api_key @aws_iam
  updateGERENTE(input: UpdateGERENTEInput!, condition: ModelGERENTEConditionInput): GERENTE @aws_api_key @aws_iam
  deleteGERENTE(input: DeleteGERENTEInput!, condition: ModelGERENTEConditionInput): GERENTE @aws_api_key @aws_iam
  createVENDEDORES(input: CreateVENDEDORESInput!, condition: ModelVENDEDORESConditionInput): VENDEDORES @aws_api_key @aws_iam
  updateVENDEDORES(input: UpdateVENDEDORESInput!, condition: ModelVENDEDORESConditionInput): VENDEDORES @aws_api_key @aws_iam
  deleteVENDEDORES(input: DeleteVENDEDORESInput!, condition: ModelVENDEDORESConditionInput): VENDEDORES @aws_api_key @aws_iam
  createINVENTARIO(input: CreateINVENTARIOInput!, condition: ModelINVENTARIOConditionInput): INVENTARIO @aws_api_key @aws_iam
  updateINVENTARIO(input: UpdateINVENTARIOInput!, condition: ModelINVENTARIOConditionInput): INVENTARIO @aws_api_key @aws_iam
  deleteINVENTARIO(input: DeleteINVENTARIOInput!, condition: ModelINVENTARIOConditionInput): INVENTARIO @aws_api_key @aws_iam
  createORDEN(input: CreateORDENInput!, condition: ModelORDENConditionInput): ORDEN @aws_api_key @aws_iam
  updateORDEN(input: UpdateORDENInput!, condition: ModelORDENConditionInput): ORDEN @aws_api_key @aws_iam
  deleteORDEN(input: DeleteORDENInput!, condition: ModelORDENConditionInput): ORDEN @aws_api_key @aws_iam
  createCLIENTES(input: CreateCLIENTESInput!, condition: ModelCLIENTESConditionInput): CLIENTES @aws_api_key @aws_iam
  updateCLIENTES(input: UpdateCLIENTESInput!, condition: ModelCLIENTESConditionInput): CLIENTES @aws_api_key @aws_iam
  deleteCLIENTES(input: DeleteCLIENTESInput!, condition: ModelCLIENTESConditionInput): CLIENTES @aws_api_key @aws_iam
  createOPTICA(input: CreateOPTICAInput!, condition: ModelOPTICAConditionInput): OPTICA @aws_api_key @aws_iam
  updateOPTICA(input: UpdateOPTICAInput!, condition: ModelOPTICAConditionInput): OPTICA @aws_api_key @aws_iam
  deleteOPTICA(input: DeleteOPTICAInput!, condition: ModelOPTICAConditionInput): OPTICA @aws_api_key @aws_iam
}

input ModelSubscriptionINVENTARIOORDENITEMSFilterInput {
  id: ModelSubscriptionIDInput
  cantidad: ModelSubscriptionIntInput
  costo: ModelSubscriptionFloatInput
  inventarioID: ModelSubscriptionIDInput
  ordenID: ModelSubscriptionIDInput
  and: [ModelSubscriptionINVENTARIOORDENITEMSFilterInput]
  or: [ModelSubscriptionINVENTARIOORDENITEMSFilterInput]
}

type Subscription {
  onCreateINVENTARIOORDENITEMS(filter: ModelSubscriptionINVENTARIOORDENITEMSFilterInput): INVENTARIOORDENITEMS @aws_subscribe(mutations: ["createINVENTARIOORDENITEMS"]) @aws_api_key @aws_iam
  onUpdateINVENTARIOORDENITEMS(filter: ModelSubscriptionINVENTARIOORDENITEMSFilterInput): INVENTARIOORDENITEMS @aws_subscribe(mutations: ["updateINVENTARIOORDENITEMS"]) @aws_api_key @aws_iam
  onDeleteINVENTARIOORDENITEMS(filter: ModelSubscriptionINVENTARIOORDENITEMSFilterInput): INVENTARIOORDENITEMS @aws_subscribe(mutations: ["deleteINVENTARIOORDENITEMS"]) @aws_api_key @aws_iam
  onCreateGERENTE(filter: ModelSubscriptionGERENTEFilterInput): GERENTE @aws_subscribe(mutations: ["createGERENTE"]) @aws_api_key @aws_iam
  onUpdateGERENTE(filter: ModelSubscriptionGERENTEFilterInput): GERENTE @aws_subscribe(mutations: ["updateGERENTE"]) @aws_api_key @aws_iam
  onDeleteGERENTE(filter: ModelSubscriptionGERENTEFilterInput): GERENTE @aws_subscribe(mutations: ["deleteGERENTE"]) @aws_api_key @aws_iam
  onCreateVENDEDORES(filter: ModelSubscriptionVENDEDORESFilterInput): VENDEDORES @aws_subscribe(mutations: ["createVENDEDORES"]) @aws_api_key @aws_iam
  onUpdateVENDEDORES(filter: ModelSubscriptionVENDEDORESFilterInput): VENDEDORES @aws_subscribe(mutations: ["updateVENDEDORES"]) @aws_api_key @aws_iam
  onDeleteVENDEDORES(filter: ModelSubscriptionVENDEDORESFilterInput): VENDEDORES @aws_subscribe(mutations: ["deleteVENDEDORES"]) @aws_api_key @aws_iam
  onCreateINVENTARIO(filter: ModelSubscriptionINVENTARIOFilterInput): INVENTARIO @aws_subscribe(mutations: ["createINVENTARIO"]) @aws_api_key @aws_iam
  onUpdateINVENTARIO(filter: ModelSubscriptionINVENTARIOFilterInput): INVENTARIO @aws_subscribe(mutations: ["updateINVENTARIO"]) @aws_api_key @aws_iam
  onDeleteINVENTARIO(filter: ModelSubscriptionINVENTARIOFilterInput): INVENTARIO @aws_subscribe(mutations: ["deleteINVENTARIO"]) @aws_api_key @aws_iam
  onCreateORDEN(filter: ModelSubscriptionORDENFilterInput): ORDEN @aws_subscribe(mutations: ["createORDEN"]) @aws_api_key @aws_iam
  onUpdateORDEN(filter: ModelSubscriptionORDENFilterInput): ORDEN @aws_subscribe(mutations: ["updateORDEN"]) @aws_api_key @aws_iam
  onDeleteORDEN(filter: ModelSubscriptionORDENFilterInput): ORDEN @aws_subscribe(mutations: ["deleteORDEN"]) @aws_api_key @aws_iam
  onCreateCLIENTES(filter: ModelSubscriptionCLIENTESFilterInput): CLIENTES @aws_subscribe(mutations: ["createCLIENTES"]) @aws_api_key @aws_iam
  onUpdateCLIENTES(filter: ModelSubscriptionCLIENTESFilterInput): CLIENTES @aws_subscribe(mutations: ["updateCLIENTES"]) @aws_api_key @aws_iam
  onDeleteCLIENTES(filter: ModelSubscriptionCLIENTESFilterInput): CLIENTES @aws_subscribe(mutations: ["deleteCLIENTES"]) @aws_api_key @aws_iam
  onCreateOPTICA(filter: ModelSubscriptionOPTICAFilterInput): OPTICA @aws_subscribe(mutations: ["createOPTICA"]) @aws_api_key @aws_iam
  onUpdateOPTICA(filter: ModelSubscriptionOPTICAFilterInput): OPTICA @aws_subscribe(mutations: ["updateOPTICA"]) @aws_api_key @aws_iam
  onDeleteOPTICA(filter: ModelSubscriptionOPTICAFilterInput): OPTICA @aws_subscribe(mutations: ["deleteOPTICA"]) @aws_api_key @aws_iam
}

type ModelGERENTEConnection @aws_api_key @aws_iam {
  items: [GERENTE]!
  nextToken: String
  startedAt: AWSTimestamp
}

input ModelGERENTEFilterInput {
  id: ModelIDInput
  nombres: ModelStringInput
  userName: ModelStringInput
  email: ModelStringInput
  phoneNumber: ModelStringInput
  confirmed: ModelBooleanInput
  blocked: ModelBooleanInput
  createdBy: ModelStringInput
  opticaID: ModelIDInput
  and: [ModelGERENTEFilterInput]
  or: [ModelGERENTEFilterInput]
  not: ModelGERENTEFilterInput
}

input ModelGERENTEConditionInput {
  nombres: ModelStringInput
  userName: ModelStringInput
  email: ModelStringInput
  phoneNumber: ModelStringInput
  confirmed: ModelBooleanInput
  blocked: ModelBooleanInput
  createdBy: ModelStringInput
  opticaID: ModelIDInput
  and: [ModelGERENTEConditionInput]
  or: [ModelGERENTEConditionInput]
  not: ModelGERENTEConditionInput
}

input CreateGERENTEInput {
  id: ID
  nombres: String!
  userName: String!
  email: String
  phoneNumber: String
  confirmed: Boolean
  blocked: Boolean
  createdBy: String!
  opticaID: ID!
  _version: Int
}

input UpdateGERENTEInput {
  id: ID!
  nombres: String
  userName: String
  email: String
  phoneNumber: String
  confirmed: Boolean
  blocked: Boolean
  createdBy: String
  opticaID: ID
  _version: Int
}

input DeleteGERENTEInput {
  id: ID!
  _version: Int
}

input ModelSubscriptionGERENTEFilterInput {
  id: ModelSubscriptionIDInput
  nombres: ModelSubscriptionStringInput
  userName: ModelSubscriptionStringInput
  email: ModelSubscriptionStringInput
  phoneNumber: ModelSubscriptionStringInput
  confirmed: ModelSubscriptionBooleanInput
  blocked: ModelSubscriptionBooleanInput
  createdBy: ModelSubscriptionStringInput
  opticaID: ModelSubscriptionIDInput
  and: [ModelSubscriptionGERENTEFilterInput]
  or: [ModelSubscriptionGERENTEFilterInput]
}

type ModelVENDEDORESConnection @aws_api_key @aws_iam {
  items: [VENDEDORES]!
  nextToken: String
  startedAt: AWSTimestamp
}

input ModelVENDEDORESFilterInput {
  id: ModelIDInput
  nombres: ModelStringInput
  apellidoPaterno: ModelStringInput
  apellidoMaterno: ModelStringInput
  whats: ModelStringInput
  email: ModelStringInput
  opticaID: ModelIDInput
  and: [ModelVENDEDORESFilterInput]
  or: [ModelVENDEDORESFilterInput]
  not: ModelVENDEDORESFilterInput
}

input ModelVENDEDORESConditionInput {
  nombres: ModelStringInput
  apellidoPaterno: ModelStringInput
  apellidoMaterno: ModelStringInput
  whats: ModelStringInput
  email: ModelStringInput
  opticaID: ModelIDInput
  and: [ModelVENDEDORESConditionInput]
  or: [ModelVENDEDORESConditionInput]
  not: ModelVENDEDORESConditionInput
}

input CreateVENDEDORESInput {
  id: ID
  nombres: String
  apellidoPaterno: String
  apellidoMaterno: String
  whats: String
  email: String
  opticaID: ID!
  _version: Int
}

input UpdateVENDEDORESInput {
  id: ID!
  nombres: String
  apellidoPaterno: String
  apellidoMaterno: String
  whats: String
  email: String
  opticaID: ID
  _version: Int
}

input DeleteVENDEDORESInput {
  id: ID!
  _version: Int
}

input ModelSubscriptionVENDEDORESFilterInput {
  id: ModelSubscriptionIDInput
  nombres: ModelSubscriptionStringInput
  apellidoPaterno: ModelSubscriptionStringInput
  apellidoMaterno: ModelSubscriptionStringInput
  whats: ModelSubscriptionStringInput
  email: ModelSubscriptionStringInput
  opticaID: ModelSubscriptionIDInput
  and: [ModelSubscriptionVENDEDORESFilterInput]
  or: [ModelSubscriptionVENDEDORESFilterInput]
}

type ModelINVENTARIOConnection @aws_api_key @aws_iam {
  items: [INVENTARIO]!
  nextToken: String
  startedAt: AWSTimestamp
}

input ModelENUMCATEGORIAInput {
  eq: ENUMCATEGORIA
  ne: ENUMCATEGORIA
}

input ModelINVENTARIOFilterInput {
  id: ModelIDInput
  nombreProducto: ModelStringInput
  proveedor: ModelStringInput
  costo: ModelFloatInput
  precioVenta: ModelFloatInput
  color: ModelStringInput
  tipoEstructura: ModelStringInput
  urlImagen: ModelStringInput
  tipoMaterial: ModelStringInput
  categoria: ModelENUMCATEGORIAInput
  opticaID: ModelIDInput
  and: [ModelINVENTARIOFilterInput]
  or: [ModelINVENTARIOFilterInput]
  not: ModelINVENTARIOFilterInput
}

input ModelINVENTARIOConditionInput {
  nombreProducto: ModelStringInput
  proveedor: ModelStringInput
  costo: ModelFloatInput
  precioVenta: ModelFloatInput
  color: ModelStringInput
  tipoEstructura: ModelStringInput
  urlImagen: ModelStringInput
  tipoMaterial: ModelStringInput
  categoria: ModelENUMCATEGORIAInput
  opticaID: ModelIDInput
  and: [ModelINVENTARIOConditionInput]
  or: [ModelINVENTARIOConditionInput]
  not: ModelINVENTARIOConditionInput
}

input CreateINVENTARIOInput {
  id: ID
  nombreProducto: String
  proveedor: String
  costo: Float!
  precioVenta: Float!
  color: String
  tipoEstructura: String
  urlImagen: String
  tipoMaterial: String
  categoria: ENUMCATEGORIA!
  opticaID: ID!
  _version: Int
}

input UpdateINVENTARIOInput {
  id: ID!
  nombreProducto: String
  proveedor: String
  costo: Float
  precioVenta: Float
  color: String
  tipoEstructura: String
  urlImagen: String
  tipoMaterial: String
  categoria: ENUMCATEGORIA
  opticaID: ID
  _version: Int
}

input DeleteINVENTARIOInput {
  id: ID!
  _version: Int
}

input ModelSubscriptionINVENTARIOFilterInput {
  id: ModelSubscriptionIDInput
  nombreProducto: ModelSubscriptionStringInput
  proveedor: ModelSubscriptionStringInput
  costo: ModelSubscriptionFloatInput
  precioVenta: ModelSubscriptionFloatInput
  color: ModelSubscriptionStringInput
  tipoEstructura: ModelSubscriptionStringInput
  urlImagen: ModelSubscriptionStringInput
  tipoMaterial: ModelSubscriptionStringInput
  categoria: ModelSubscriptionStringInput
  opticaID: ModelSubscriptionIDInput
  and: [ModelSubscriptionINVENTARIOFilterInput]
  or: [ModelSubscriptionINVENTARIOFilterInput]
}

type ModelORDENConnection @aws_api_key @aws_iam {
  items: [ORDEN]!
  nextToken: String
  startedAt: AWSTimestamp
}

input ModelTIPOORDENInput {
  eq: TIPOORDEN
  ne: TIPOORDEN
}

input ModelORDENSTATUSInput {
  eq: ORDENSTATUS
  ne: ORDENSTATUS
}

input ModelORDENFilterInput {
  id: ModelIDInput
  opticaID: ModelIDInput
  tipoOrden: ModelTIPOORDENInput
  clientesID: ModelIDInput
  usadoLentes: ModelStringInput
  fechaOrden: ModelStringInput
  horaOrden: ModelStringInput
  precioTotal: ModelStringInput
  referencia: ModelStringInput
  fechaEntrega: ModelStringInput
  seRealizoExamen: ModelStringInput
  graduacionDerechaVieja: ModelStringInput
  graduacionIzquierdaVieja: ModelStringInput
  graduacionDerechaNueva: ModelStringInput
  graduacionIzquierdaNueva: ModelStringInput
  fechaExamen: ModelStringInput
  ordenStatus: ModelORDENSTATUSInput
  precioGraduacion: ModelStringInput
  and: [ModelORDENFilterInput]
  or: [ModelORDENFilterInput]
  not: ModelORDENFilterInput
}

input ModelORDENConditionInput {
  opticaID: ModelIDInput
  tipoOrden: ModelTIPOORDENInput
  clientesID: ModelIDInput
  usadoLentes: ModelStringInput
  fechaOrden: ModelStringInput
  horaOrden: ModelStringInput
  precioTotal: ModelStringInput
  referencia: ModelStringInput
  fechaEntrega: ModelStringInput
  seRealizoExamen: ModelStringInput
  graduacionDerechaVieja: ModelStringInput
  graduacionIzquierdaVieja: ModelStringInput
  graduacionDerechaNueva: ModelStringInput
  graduacionIzquierdaNueva: ModelStringInput
  fechaExamen: ModelStringInput
  ordenStatus: ModelORDENSTATUSInput
  precioGraduacion: ModelStringInput
  and: [ModelORDENConditionInput]
  or: [ModelORDENConditionInput]
  not: ModelORDENConditionInput
}

input CreateORDENInput {
  id: ID
  opticaID: ID!
  tipoOrden: TIPOORDEN
  clientesID: ID!
  usadoLentes: String
  fechaOrden: String
  horaOrden: String
  precioTotal: String
  referencia: String
  fechaEntrega: String
  seRealizoExamen: String
  graduacionDerechaVieja: String
  graduacionIzquierdaVieja: String
  graduacionDerechaNueva: String
  graduacionIzquierdaNueva: String
  fechaExamen: String
  ordenStatus: ORDENSTATUS
  precioGraduacion: String
  _version: Int
}

input UpdateORDENInput {
  id: ID!
  opticaID: ID
  tipoOrden: TIPOORDEN
  clientesID: ID
  usadoLentes: String
  fechaOrden: String
  horaOrden: String
  precioTotal: String
  referencia: String
  fechaEntrega: String
  seRealizoExamen: String
  graduacionDerechaVieja: String
  graduacionIzquierdaVieja: String
  graduacionDerechaNueva: String
  graduacionIzquierdaNueva: String
  fechaExamen: String
  ordenStatus: ORDENSTATUS
  precioGraduacion: String
  _version: Int
}

input DeleteORDENInput {
  id: ID!
  _version: Int
}

input ModelSubscriptionORDENFilterInput {
  id: ModelSubscriptionIDInput
  opticaID: ModelSubscriptionIDInput
  tipoOrden: ModelSubscriptionStringInput
  clientesID: ModelSubscriptionIDInput
  usadoLentes: ModelSubscriptionStringInput
  fechaOrden: ModelSubscriptionStringInput
  horaOrden: ModelSubscriptionStringInput
  precioTotal: ModelSubscriptionStringInput
  referencia: ModelSubscriptionStringInput
  fechaEntrega: ModelSubscriptionStringInput
  seRealizoExamen: ModelSubscriptionStringInput
  graduacionDerechaVieja: ModelSubscriptionStringInput
  graduacionIzquierdaVieja: ModelSubscriptionStringInput
  graduacionDerechaNueva: ModelSubscriptionStringInput
  graduacionIzquierdaNueva: ModelSubscriptionStringInput
  fechaExamen: ModelSubscriptionStringInput
  ordenStatus: ModelSubscriptionStringInput
  precioGraduacion: ModelSubscriptionStringInput
  and: [ModelSubscriptionORDENFilterInput]
  or: [ModelSubscriptionORDENFilterInput]
}

type ModelCLIENTESConnection @aws_api_key @aws_iam {
  items: [CLIENTES]!
  nextToken: String
  startedAt: AWSTimestamp
}

input ModelCLIENTESFilterInput {
  id: ModelIDInput
  nombres: ModelStringInput
  apellidoPaterno: ModelStringInput
  apellidoMaterno: ModelStringInput
  fechaNacimiento: ModelStringInput
  edad: ModelStringInput
  whats: ModelStringInput
  sexo: ModelStringInput
  email: ModelStringInput
  opticaID: ModelIDInput
  and: [ModelCLIENTESFilterInput]
  or: [ModelCLIENTESFilterInput]
  not: ModelCLIENTESFilterInput
}

input ModelCLIENTESConditionInput {
  nombres: ModelStringInput
  apellidoPaterno: ModelStringInput
  apellidoMaterno: ModelStringInput
  fechaNacimiento: ModelStringInput
  edad: ModelStringInput
  whats: ModelStringInput
  sexo: ModelStringInput
  email: ModelStringInput
  opticaID: ModelIDInput
  and: [ModelCLIENTESConditionInput]
  or: [ModelCLIENTESConditionInput]
  not: ModelCLIENTESConditionInput
}

input CreateCLIENTESInput {
  id: ID
  nombres: String
  apellidoPaterno: String
  apellidoMaterno: String
  fechaNacimiento: String
  edad: String
  whats: String
  sexo: String
  email: String
  opticaID: ID!
  _version: Int
}

input UpdateCLIENTESInput {
  id: ID!
  nombres: String
  apellidoPaterno: String
  apellidoMaterno: String
  fechaNacimiento: String
  edad: String
  whats: String
  sexo: String
  email: String
  opticaID: ID
  _version: Int
}

input DeleteCLIENTESInput {
  id: ID!
  _version: Int
}

input ModelSubscriptionCLIENTESFilterInput {
  id: ModelSubscriptionIDInput
  nombres: ModelSubscriptionStringInput
  apellidoPaterno: ModelSubscriptionStringInput
  apellidoMaterno: ModelSubscriptionStringInput
  fechaNacimiento: ModelSubscriptionStringInput
  edad: ModelSubscriptionStringInput
  whats: ModelSubscriptionStringInput
  sexo: ModelSubscriptionStringInput
  email: ModelSubscriptionStringInput
  opticaID: ModelSubscriptionIDInput
  and: [ModelSubscriptionCLIENTESFilterInput]
  or: [ModelSubscriptionCLIENTESFilterInput]
}

type ModelOPTICAConnection @aws_api_key @aws_iam {
  items: [OPTICA]!
  nextToken: String
  startedAt: AWSTimestamp
}

input ModelOPTICAFilterInput {
  id: ModelIDInput
  nombre: ModelStringInput
  createdBy: ModelStringInput
  and: [ModelOPTICAFilterInput]
  or: [ModelOPTICAFilterInput]
  not: ModelOPTICAFilterInput
}

input ModelOPTICAConditionInput {
  nombre: ModelStringInput
  createdBy: ModelStringInput
  and: [ModelOPTICAConditionInput]
  or: [ModelOPTICAConditionInput]
  not: ModelOPTICAConditionInput
}

input CreateOPTICAInput {
  id: ID
  nombre: String!
  createdBy: String!
  _version: Int
}

input UpdateOPTICAInput {
  id: ID!
  nombre: String
  createdBy: String
  _version: Int
}

input DeleteOPTICAInput {
  id: ID!
  _version: Int
}

input ModelSubscriptionOPTICAFilterInput {
  id: ModelSubscriptionIDInput
  nombre: ModelSubscriptionStringInput
  createdBy: ModelSubscriptionStringInput
  and: [ModelSubscriptionOPTICAFilterInput]
  or: [ModelSubscriptionOPTICAFilterInput]
}

